# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from playground.proto import service_pb2 as playground_dot_proto_dot_service__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in playground/proto/service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PlaygroundServiceStub(object):
    """Service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Echo = channel.unary_unary(
                '/grpc_playground.PlaygroundService/Echo',
                request_serializer=playground_dot_proto_dot_service__pb2.EchoRequest.SerializeToString,
                response_deserializer=playground_dot_proto_dot_service__pb2.EchoResponse.FromString,
                _registered_method=True)
        self.StreamData = channel.unary_stream(
                '/grpc_playground.PlaygroundService/StreamData',
                request_serializer=playground_dot_proto_dot_service__pb2.StreamRequest.SerializeToString,
                response_deserializer=playground_dot_proto_dot_service__pb2.StreamResponse.FromString,
                _registered_method=True)
        self.CollectData = channel.stream_unary(
                '/grpc_playground.PlaygroundService/CollectData',
                request_serializer=playground_dot_proto_dot_service__pb2.CollectRequest.SerializeToString,
                response_deserializer=playground_dot_proto_dot_service__pb2.CollectResponse.FromString,
                _registered_method=True)
        self.Chat = channel.stream_stream(
                '/grpc_playground.PlaygroundService/Chat',
                request_serializer=playground_dot_proto_dot_service__pb2.ChatMessage.SerializeToString,
                response_deserializer=playground_dot_proto_dot_service__pb2.ChatMessage.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/grpc_playground.PlaygroundService/HealthCheck',
                request_serializer=playground_dot_proto_dot_service__pb2.HealthRequest.SerializeToString,
                response_deserializer=playground_dot_proto_dot_service__pb2.HealthResponse.FromString,
                _registered_method=True)
        self.StressTest = channel.unary_unary(
                '/grpc_playground.PlaygroundService/StressTest',
                request_serializer=playground_dot_proto_dot_service__pb2.StressRequest.SerializeToString,
                response_deserializer=playground_dot_proto_dot_service__pb2.StressResponse.FromString,
                _registered_method=True)
        self.Ping = channel.unary_unary(
                '/grpc_playground.PlaygroundService/Ping',
                request_serializer=playground_dot_proto_dot_service__pb2.PingRequest.SerializeToString,
                response_deserializer=playground_dot_proto_dot_service__pb2.PingResponse.FromString,
                _registered_method=True)


class PlaygroundServiceServicer(object):
    """Service definition
    """

    def Echo(self, request, context):
        """Basic unary RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamData(self, request, context):
        """Server streaming RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CollectData(self, request_iterator, context):
        """Client streaming RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chat(self, request_iterator, context):
        """Bidirectional streaming RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Health check
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StressTest(self, request, context):
        """Stress test method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Ping method for testing keepalive
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlaygroundServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Echo': grpc.unary_unary_rpc_method_handler(
                    servicer.Echo,
                    request_deserializer=playground_dot_proto_dot_service__pb2.EchoRequest.FromString,
                    response_serializer=playground_dot_proto_dot_service__pb2.EchoResponse.SerializeToString,
            ),
            'StreamData': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamData,
                    request_deserializer=playground_dot_proto_dot_service__pb2.StreamRequest.FromString,
                    response_serializer=playground_dot_proto_dot_service__pb2.StreamResponse.SerializeToString,
            ),
            'CollectData': grpc.stream_unary_rpc_method_handler(
                    servicer.CollectData,
                    request_deserializer=playground_dot_proto_dot_service__pb2.CollectRequest.FromString,
                    response_serializer=playground_dot_proto_dot_service__pb2.CollectResponse.SerializeToString,
            ),
            'Chat': grpc.stream_stream_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=playground_dot_proto_dot_service__pb2.ChatMessage.FromString,
                    response_serializer=playground_dot_proto_dot_service__pb2.ChatMessage.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=playground_dot_proto_dot_service__pb2.HealthRequest.FromString,
                    response_serializer=playground_dot_proto_dot_service__pb2.HealthResponse.SerializeToString,
            ),
            'StressTest': grpc.unary_unary_rpc_method_handler(
                    servicer.StressTest,
                    request_deserializer=playground_dot_proto_dot_service__pb2.StressRequest.FromString,
                    response_serializer=playground_dot_proto_dot_service__pb2.StressResponse.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=playground_dot_proto_dot_service__pb2.PingRequest.FromString,
                    response_serializer=playground_dot_proto_dot_service__pb2.PingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc_playground.PlaygroundService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpc_playground.PlaygroundService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlaygroundService(object):
    """Service definition
    """

    @staticmethod
    def Echo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_playground.PlaygroundService/Echo',
            playground_dot_proto_dot_service__pb2.EchoRequest.SerializeToString,
            playground_dot_proto_dot_service__pb2.EchoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/grpc_playground.PlaygroundService/StreamData',
            playground_dot_proto_dot_service__pb2.StreamRequest.SerializeToString,
            playground_dot_proto_dot_service__pb2.StreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CollectData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/grpc_playground.PlaygroundService/CollectData',
            playground_dot_proto_dot_service__pb2.CollectRequest.SerializeToString,
            playground_dot_proto_dot_service__pb2.CollectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Chat(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/grpc_playground.PlaygroundService/Chat',
            playground_dot_proto_dot_service__pb2.ChatMessage.SerializeToString,
            playground_dot_proto_dot_service__pb2.ChatMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_playground.PlaygroundService/HealthCheck',
            playground_dot_proto_dot_service__pb2.HealthRequest.SerializeToString,
            playground_dot_proto_dot_service__pb2.HealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StressTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_playground.PlaygroundService/StressTest',
            playground_dot_proto_dot_service__pb2.StressRequest.SerializeToString,
            playground_dot_proto_dot_service__pb2.StressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc_playground.PlaygroundService/Ping',
            playground_dot_proto_dot_service__pb2.PingRequest.SerializeToString,
            playground_dot_proto_dot_service__pb2.PingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
